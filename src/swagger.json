{
    "openapi": "3.0.0",
    "info": {
        "title": "EcomFast API",
        "version": "1.0.0",
        "description": "Documentation for EcomFast API"
    },
    "servers": [
        {
            "url": "http://localhost:3000/api",
            "description": "Local server"
        }
    ],
    "components": {
        "securitySchemes": {
            "apiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization"
            }
        },
        "schemas": {
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "JWT Token"
                    }
                },
                "example": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
            },
            "Login": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User password"
                    }
                },
                "example": {
                    "email": "johndoe@example.com",
                    "password": "password123"
                }
            },
            "User": {
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The auto-generated id of the user"
                    },
                    "email": {
                        "type": "string",
                        "description": "The email of the user"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password"
                    }
                },
                "example": {
                    "id": 1,
                    "email": "johndoe@example.com",
                    "password": "password123"
                }
            },
            "UserUpdate": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The email of the user"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password"
                    }
                },
                "example": {
                    "email": "newemail@example.com",
                    "password": "newpassword123"
                }
            },
            "Order": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The auto-generated id of the order"
                    },
                    "total": {
                        "type": "number",
                        "description": "order total price"
                    },
                    "userId": {
                        "type": "integer",
                        "description": "The id of the user who made the order"
                    },
                    "cartId": {
                        "type": "integer",
                        "description": "The id of the cart of the order"
                    }
                },
                "example": {
                    "id": 1,
                    "total": 50000,
                    "userId": 1,
                    "cartId": 1
                }
            },
            "OrderCreate": {
                "type": "object",
                "properties": {
                    "cartId": {
                        "type": "integer",
                        "description": "The id of the cart to create the order"
                    }
                },
                "example": {
                    "cartId": 4
                }
            },
            "ProductCart": {
                "type": "object",
                "required": [
                    "productId",
                    "cartId",
                    "quantity"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The auto-generated id of the product cart"
                    },
                    "productId": {
                        "type": "integer",
                        "description": "Id of the product to add to the cart"
                    },
                    "cartId": {
                        "type": "integer",
                        "description": "User's cart Id"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Quantity of the product to add to the cart"
                    }
                },
                "example": {
                    "id": 1,
                    "cartId": 1,
                    "productId": 2,
                    "quantity": 5
                }
            },
            "ProductCartUpdate": {
                "type": "object",
                "required": [
                    "quantity"
                ],
                "properties": {
                 "quantity": {
                        "type": "integer",
                        "description": "New quantity"
                    }
                },
                "example": {
                    "quantity": 5
                }
            },
            "Product": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Autogenerated ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Product name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Product description"
                    },
                    "price": {
                        "type": "number",
                        "description": "Product price"
                    },
                    "stock": {
                        "type": "integer",
                        "description": "Product stock"
                    }
                },
                "example": {
                    "id": 1,
                    "name": "Product 1",
                    "description": "Product 1 description",
                    "price": 40000,
                    "stock": 100
                }
            },
            "Cart": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Autogenerated ID"
                    },
                    "userId": {
                        "type": "integer",
                        "description": "User ID"
                    }
                },
                "example": {
                    "id": 1,
                    "userId": 2
                }
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication related endpoints"
        },
        {
            "name": "Users",
            "description": "User management"
        },
        {
            "name": "Products",
            "description": "Product management"
        },
        {
            "name": "Orders",
            "description": "Order management"
        },
        {
            "name": "Cart",
            "description": "Cart management"
        },
        {
            "name": "Product Cart",
            "description": "Product cart management"
        }
    ],
    "paths": {
        "/auth/login":{
            "post": {
                "summary": "User login",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Login"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User logged succesfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "Returns the list of all the users",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "apiKeyAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of the users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }           
        },
        "/users/{id}": {
            "get": {
                "summary": "Returns a user by ID",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "apiKeyAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The ID of the user to retrieve"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "patch": {
                "summary": "Updates a user by ID",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "apiKeyAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The ID of the user to update"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a user by ID",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "apiKeyAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The ID of the user to delete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/users/{id}/orders":{
            "get": {
                "summary": "Returns user orders",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "apiKeyAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The ID of the user to get the orders"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Order"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/users/register":{
            "post": {
                "summary": "Register a new user",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Login"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "409": {
                        "description": "User already exists"
                    }
                }
            }
        },
        "/users/admin":{
            "post": {
                "summary": "Register a new admin",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Login"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Admin registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "409": {
                        "description": "User already exists"
                    }
                }
            }
        },
        "/products":{
            "get": {
                "summary": "Get all products",
                "tags": [
                    "Products"
                ],
                "responses": {
                    "200": {
                        "description": "The list of the products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No products were found"
                    }
                }
            },
            "post": {
                "summary": "Creates new product",
                "tags": [
                    "Products"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/products/{id}":{
            "patch": {
                "summary": "Updates product by ID",
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "apiKeyAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The ID of the product to update"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a product by ID",
                "tags": [
                    "Products"
                ],
                "security": [
                    {
                        "apiKeyAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The ID of the product to delete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The deleted product details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/product-cart":{
            "post": {
                "summary": "Creates a new product cart",
                "tags": [
                    "Product Cart"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCart"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product add successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCart"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404":{
                        "description": "Cart or product not found"
                    }
                }
            }
        },
        "/product-cart/{id}":{
            "patch": {
                "summary": "Change quantity of the product in the product cart by productCart ID",
                "tags": [
                    "Product Cart"
                ],
                "security": [
                    {
                        "apiKeyAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The ID of product cart to update"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCartUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product cart updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCart"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not enough stock"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Product cart not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a product in the cart by product cart ID",
                "tags": [
                    "Product Cart"
                ],
                "security": [
                    {
                        "apiKeyAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The ID of the product cart to delete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The product cart details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCart"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Product cart not found"
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "summary": "Get all orders",
                "tags": [
                    "Orders"
                ],
                "security": [
                    {
                        "apiKeyAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of the orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Order"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No orders were found"
                    }
                }
            },
            "post": {
                "summary": "Creates a new order",
                "tags": [
                    "Orders"
                ],
                "security": [
                    {
                        "apiKeyAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Cart/user was not found"
                    }
                }
            }
        },
        "/orders/{id}/products":{
            "get": {
                "summary": "Returns products by order ID",
                "tags": [
                    "Orders"
                ],
                "security": [
                    {
                        "apiKeyAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The ID of the order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The order's products",
                        "content": {
                            "application/json": {
                                "type": "array",
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/orders/{id}": {
            "delete": {
                "summary": "Delete an order by ID",
                "tags": [
                    "Orders"
                ],
                "security": [
                    {
                        "apiKeyAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The ID of the order to delete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The deleted order details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/carts/{userId}/user":{
            "get": {
                "summary": "Returns carts by user ID",
                "tags": [
                    "Cart"
                ],
                "security": [
                    {
                        "apiKeyAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The ID of the user"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The carts details",
                        "content": {
                            "application/json": {
                                "type": "array",
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Carts not found"
                    }
                }
            }
        },
        "/carts": {
            "post": {
                "summary": "Creates a new cart",
                "tags": [
                    "Cart"
                ],
		"security": [
                    {
                        "apiKeyAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Cart created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        }
    }

}
